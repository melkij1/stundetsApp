{"remainingRequest":"/Users/melkij/Documents/Project/Students/node_modules/thread-loader/dist/cjs.js!/Users/melkij/Documents/Project/Students/node_modules/babel-loader/lib/index.js!/Users/melkij/Documents/Project/Students/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/melkij/Documents/Project/Students/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/melkij/Documents/Project/Students/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/melkij/Documents/Project/Students/src/App.vue","mtime":1564736608000},{"path":"/Users/melkij/Documents/Project/Students/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/melkij/Documents/Project/Students/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/melkij/Documents/Project/Students/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/melkij/Documents/Project/Students/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/melkij/Documents/Project/Students/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ModalForm from \"./components/ModalForm.vue\";\nimport TableStudent from \"./components/TableStudent.vue\";\nimport mixins from \"./mixins\";\nexport default {\n  name: 'app',\n  mixins: [mixins],\n  data: function data() {\n    return {\n      lists: [{\n        id: 1,\n        name: \"Вася\",\n        family: \"Петров\",\n        data: \"06.10.1993\",\n        group: \"ИВТ-1-15\",\n        isChecked: false,\n        edit: false\n      }, {\n        id: 2,\n        name: \"Иван\",\n        family: \"Пупкин\",\n        data: \"10.06.1990\",\n        group: \"ИВТ-3-135\",\n        isChecked: false,\n        edit: false\n      }],\n      isOpen: false,\n      model: {},\n      modelIndex: null,\n      error: ''\n    };\n  },\n  components: {\n    ModalForm: ModalForm,\n    TableStudent: TableStudent\n  },\n  methods: {\n    saveItem: function saveItem(event) {\n      var item = event.item;\n      this.error = this.validateStudent(item);\n\n      if (!this.error) {\n        if (item.id == null) {\n          item.id = this.getMaxIdFromLists() + 1;\n          this.lists.push(item);\n        } else {\n          this.lists[this.findIndexById(item.id)] = item;\n        }\n\n        this.model = {};\n        this.modelIndex = null;\n        this.isOpen = false;\n      }\n    },\n    getMaxIdFromLists: function getMaxIdFromLists() {\n      return Math.max.apply(Math, this.lists.map(function (item) {\n        return item.id;\n      }));\n    },\n    deleteItems: function deleteItems(ids) {\n      var _this = this;\n\n      if (!ids) {\n        return;\n      }\n\n      ids.forEach(function (id) {\n        _this.lists.splice(_this.findIndexById(id), 1);\n      });\n    },\n    edit_student_method: function edit_student_method(model, index) {\n      this.isOpen = true;\n      this.modelIndex = index;\n      this.model = model;\n    },\n    closeModel: function closeModel() {\n      this.isOpen = false;\n      this.model = {};\n      this.modelIndex = null;\n    },\n    validateStudent: function validateStudent(student) {\n      if (!/^[а-яё]+$/i.test(student.name)) {\n        return 'Имя должно содержать только кириллические символы';\n      }\n\n      if (!/^[а-яё]+$/i.test(student.family)) {\n        return 'Фамилия должна содержать только кириллические символы';\n      }\n\n      if (!/^[А-ЯЁ]{2,4}-[0-9]+-[0-9]+$/.test(student.group)) {\n        return 'Неверный номер группы';\n      }\n\n      return '';\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <button class=\"btn-add\"\n      @click=\"isOpen=!isOpen\"\n    >\n      Добавить студента\n    </button>\n    <ModalForm\n      v-if=\"isOpen\"\n      @saveItem=\"saveItem\"\n      @close=\"closeModel\"\n      :model-index=\"modelIndex\"\n      :init-model=\"model\"\n      :error=\"error\"\n    />\n    <TableStudent\n      modal=\"false\"\n      :lists=\"lists\"\n      @edit_student=\"edit_student_method\"\n      @delete-item=\"deleteItems\"\n    />\n  </div>\n</template>\n\n<script>\nimport ModalForm from './components/ModalForm.vue'\nimport TableStudent from './components/TableStudent.vue'\nimport mixins from './mixins'\n\nexport default {\n  name: 'app',\n  mixins: [mixins],\n  data(){\n    return {\n      lists: [\n        { id: 1, name: \"Вася\", family: \"Петров\", data: \"06.10.1993\", group: \"ИВТ-1-15\", isChecked: false, edit: false },\n        { id: 2, name: \"Иван\", family: \"Пупкин\", data: \"10.06.1990\", group: \"ИВТ-3-135\", isChecked: false, edit: false },\n      ],\n\n      isOpen: false,\n      model: {},\n      modelIndex: null,\n      error: '',\n    }\n  },\n  components: {\n    ModalForm,\n    TableStudent\n  },\n  methods: {\n    saveItem(event) {\n      const { item } = event;\n      this.error = this.validateStudent(item);\n      if (!this.error) {\n        if (item.id == null) {\n          item.id = this.getMaxIdFromLists() + 1\n          this.lists.push(item);\n        } else {\n          this.lists[this.findIndexById(item.id)] = item;\n        }\n        this.model = {}\n        this.modelIndex = null;\n        this.isOpen = false;\n      }\n    },\n    getMaxIdFromLists () {\n      return Math.max.apply(Math, this.lists.map(item => item.id))\n    },\n    deleteItems(ids){\n      if (!ids) {\n          return\n      }\n      ids.forEach((id) => {\n          this.lists.splice(this.findIndexById(id), 1)\n      })\n    },\n    edit_student_method(model, index) {\n      this.isOpen = true;\n      this.modelIndex= index;\n      this.model = model\n    },\n    closeModel(){\n      this.isOpen = false;\n      this.model = {}\n      this.modelIndex = null\n    },\n    validateStudent(student) {\n      if (!/^[а-яё]+$/i.test(student.name)) {\n        return 'Имя должно содержать только кириллические символы';\n      }\n      if (!/^[а-яё]+$/i.test(student.family)) {\n        return 'Фамилия должна содержать только кириллические символы';\n      }\n      if (!/^[А-ЯЁ]{2,4}-[0-9]+-[0-9]+$/.test(student.group)) {\n        return 'Неверный номер группы';\n      }\n      return '';\n    },\n\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.btn-add{\n  font-size: 15px;\n  padding: 5px 10px;\n  border: transparent;\n  background-color: green;\n  color: #ffffff;\n}\n</style>\n"],"sourceRoot":"src"}]}